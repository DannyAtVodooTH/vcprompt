.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "VCPROMPT" "1" "July 2011" "" ""
.
.SH "NAME"
\fBvcprompt\fR \- Version control information in your prompt
.
.SH "SYNOPSIS"
\fBvcprompt\fR [ \fIOPTIONS\fR ]
.
.br
\fBvcprompt\fR \-\-format \fIFORMAT\fR
.
.br
\fBvcprompt\fR \-\-format\-\fISYSTEM\fR \fIFORMAT\fR
.
.br
\fBvcprompt\fR \-\-path \fIPATH\fR
.
.br
\fBvcprompt\fR \-\-max\-depth \fIDEPTH\fR
.
.br
\fBvcprompt\fR \-\-unknown \fIUNKNOWN\fR
.
.br
\fBvcprompt\fR \-\-systems \fISYSTEMS\fR
.
.SH "DESCRIPTION"
vcprompt is a small utility for displaying version control information in your shell\'s prompt\.
.
.SH "INSTALL"
\fBvcprompt\fR is best installed a standalone executable:
.
.IP "" 4
.
.nf

# assuming ~/bin is on your $PATH
$ curl \-s http://github\.com/xvzf/vcprompt/raw/master/bin/vcprompt >> ~/bin/vcprompt
$ chmod 755 ~/bin/vcprompt
.
.fi
.
.IP "" 0
.
.P
Or, clone the git repository:
.
.IP "" 4
.
.nf

$ git clone git://github\.com/xvzf/vcprompt\.git
$ cd vcprompt
$ [sudo] python setup\.py install
.
.fi
.
.IP "" 0
.
.P
Although not really recommended, \fBvcprompt\fR can be installed from PyPi:
.
.IP "" 4
.
.nf

$ [sudo] easy_install vcprompt
.
.fi
.
.IP "" 0
.
.SH "OPTIONS"
\fBvcprompt\fR takes a few options:
.
.TP
\fB\-f\fR, \fB\-\-format\fR=FORMAT
The format string to use when displaying information\.
.
.IP
If not provided this will fall back onto the \fBVCPROMPT_FORMAT\fR environment variable or the hard\-coded string inside of the \fBvprompt\fR binary\.
.
.TP
\fB\-\-format\-<SYSTEM>\fR=FORMAT
The format string to be used for a specific version control system\. If a system\'s formatting is not explicitly specified, it will automatically fall back onto the value of the \fB\-\-format\fR flag\.
.
.TP
\fB\-p\fR, \fB\-\-path\fR=PATH
The path to for vcprompt to start looking for a version control repository\.
.
.IP
Defaults to \'\.\'\.
.
.TP
\fB\-u\fR, \fB\-\-unknown\fR=UNKNOWN
The value to use when \fBvcprompt\fR is unable to determine the appropriate output for a formatting option\.
.
.IP
If not provided will fall back onto the \fBVCPROMPT_UNKNOWN\fR environment variable or the hard\-coded string inside of the \fBvcprompt\fR binary\.
.
.TP
\fB\-d\fR, \fB\-\-max\-depth\fR=DEPTH
The maximum number of directories \fBvcprompt\fR will traverse in order to find a version control system\.
.
.IP
A non\-positive number indicates an infinite depth\.
.
.IP
Defaults to 0 (no limit)\.
.
.TP
\fB\-s\fR, \fB\-\-systems\fR=SYSTEMS
Prints all known version control systems\.
.
.SH "ENVIRONMENT"
.
.IP "\(bu" 4
\fBVCPROMPT_FORMAT\fR: The format string which \fBvcprompt\fR will use when displaying any information\.
.
.IP
See vcprompt(5) for the full formatting syntax\.
.
.IP "\(bu" 4
\fBVCPROMPT_FORMAT_<SYSTEM>\fR Each version control system\'s formatting can be specified via it\'s own environment variable\.
.
.IP "\(bu" 4
\fBVCPROMPT_UNKNOWN\fR: The value to be used when \fBvcprompt\fR is unable to determine the output for a formatting option\.
.
.IP "\(bu" 4
\fBVCPROMPT_DEPTH\fR: The maximum number of directories \fBvcprompt\fR should traverse when looking for a usable version control system\.
.
.IP "" 0
.
.SH "SEE ALSO"
vcprompt(5)
